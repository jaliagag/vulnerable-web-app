name: Deploy Vulnerable Application with SAST                                 # workflow name

on:
  push:
    branches:
      - master
      - dev # debug
  # pull_request ...
  
jobs:
  sonar:
    name: sonar
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.source=.
            -Dsonar.sourceEncoding=UTF-8
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
            #  deploy-heroku:
            #    name: Deploy Heroku
            #    runs-on: ubuntu-latest
            #    steps:
            #      - uses: actions/checkout@v2
            #      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
            #        with:
            #          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            #          heroku_app_name: "jaliaga-app-vulnerable2022" #Must be unique in Heroku
            #          heroku_email: "jmfaliaga@gmail.com"
            #          remote_branch: "master"
            #          usedocker: true
